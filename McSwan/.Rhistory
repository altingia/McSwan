krpoints <- SpatialPoints(krmap[,1:2])
krmap <- krmap[!is.na(extract(r, krpoints)),]
krmap <- na.omit(krmap)
names(krmap) <- c("x", "y", "pred")
if (is.null(range.values)) {
range.values <- range(krmap$pred)
}
g <- ggplot(data=krmap, aes(x=x, y=y)) + geom_tile(aes(fill=pred)) +
scale_fill_gradientn(
colours=cols,
limits=range.values) +
theme_classic() +
geom_point(data=coords.ini, aes(x,y), size=4, shape=19, col="white") +
geom_point(data=coords.ini, aes(x,y), size=3, shape=19, col="black") +
ggtitle("Kriged data")
print(g)
}
# fake dataset
longs <- -5:5
lats <- -10:10
n_points <- 20
data <- cbind(sample(longs,n_points,T), sample(lats,n_points,T), runif(n_points,5,20))
r <- raster(vals=1, nrows=200, ncols=200, xmn=-10, xmx=10, ymn=-20, ymx=20)
# set NA values for the oceans / lakes / well, any irrelevant zones
r[7:15,10:20] <- NA
r[114:147,102:120] <- NA
# the background is set as a raster
# could improve function to deal with polygons
# z is the vector of values for each point
# extremal.value is the value to set at the most extreme point
plot.krige(long=data[,1], lat=data[,2], z=data[,3], extremal.value = 0,
raster = r,
kriging.mode = "spherical", # spherical | exponential | gaussian
pixels = 500, # resolution
range.values = NULL, # either NULL (do not constraint range) or a range to bound mapped z values
cols = rainbow(20, s=1, v=.85) )
require(raster); require(kriging); require(modeest); require(ggplot2)
plot.krige <- function(long, lat, z, extremal.value=0, raster, kriging.mode, pixels=100, range.values=NULL, cols) {
coords <- apply(cbind(long, lat), c(1,2), function(x) as.numeric(as.character(x)))
colnames(coords) <- c("x", "y")
coords.ini <- as.data.frame(coords)
# add extremal coords
r <- raster
ext <- extent(r)
coords <- rbind(coords, c(ext@xmin, ext@ymax), c(ext@xmax, ext@ymin))
z <- c(z, extremal.value, extremal.value)
# OBS
kr <- kriging(coords[,1], coords[,2], z,
model=kriging.mode,
lags=2,
pixels=pixels,
polygons=NULL)
krmap <- kr$map
krpoints <- SpatialPoints(krmap[,1:2])
krmap <- krmap[!is.na(extract(r, krpoints)),]
krmap <- na.omit(krmap)
names(krmap) <- c("x", "y", "pred")
if (is.null(range.values)) {
range.values <- range(krmap$pred)
}
g <- ggplot(data=krmap, aes(x=x, y=y)) + geom_tile(aes(fill=pred)) +
scale_fill_gradientn(
colours=cols,
limits=range.values) +
theme_classic() +
geom_point(data=coords.ini, aes(x,y), size=4, shape=19, col="white") +
geom_point(data=coords.ini, aes(x,y), size=3, shape=19, col="black") +
ggtitle("Kriged data")
print(g)
}
# fake dataset
longs <- -5:5
lats <- -10:10
n_points <- 10
data <- cbind(sample(longs,n_points,T), sample(lats,n_points,T), runif(n_points,5,20))
r <- raster(vals=1, nrows=200, ncols=200, xmn=-10, xmx=10, ymn=-20, ymx=20)
# set NA values for the oceans / lakes / well, any irrelevant zones
r[7:15,10:20] <- NA
r[114:147,102:120] <- NA
# the background is set as a raster
# could improve function to deal with polygons
# z is the vector of values for each point
# extremal.value is the value to set at the most extreme point
plot.krige(long=data[,1], lat=data[,2], z=data[,3], extremal.value = 0,
raster = r,
kriging.mode = "spherical", # spherical | exponential | gaussian
pixels = 500, # resolution
range.values = NULL, # either NULL (do not constraint range) or a range to bound mapped z values
cols = rainbow(20, s=1, v=.85) )
data
session.info()
sessionInfo()
log(0,20)
log(1,20)
log(19,20)
log(20,20)
log(21,20)
log(31,20)
log(40,20)
log(100,20)
log(200,20)
log(200,20)
log(400,20)
2**5
2**4
2**6
2**8
2**7
2**8
2**9
2**10
2**11
2**12
2**13
log2(2)
log2(3)
log2(4)
2**3
2**4
log10(0)
log10(1)
log10(2)
log10(3)
log10(10)
log10(20)
log2(10)
2**3
log10(12)
log2(22)
2**4
22-16
6//2
6/2
8+3
16+16
2**4
2**4
2**15
3**15
7**15
3**14
3**10
10**2
length(-8:-3)
-8:-3
length(5:12)
length(-3:3)
8*6**5
5*8*6**5
length(-2:2)
length(7:12)
length(7:126*4**8)
6*4**8
50*20
100*20
100*50
length(-6:-3)
3*6*4**8
3*6
500000/18
27777/4
log(27777,4)
3*6*4**7
3*6*4**8
3*6*4**7
4*6*4**7
60000*10
nDemes=3
nCycles <- 5
strengthCycle=1e3 # shall be superior to 1
Tdivs <- c(10000,5000,8000)
maxTdiv <- 10000
Tcycles <- floor(seq(0, maxTdiv, length.out=nCycles*2))
Tstrengths <- c(1, rep(c(strengthCycle^-1, strengthCycle), length(Tcycles)/2-1), 1)
for ( d in 1:nDemes ) {
c <- 1
noMore <- FALSE
for ( c in seq(1, length(Tcycles), by=2) ) {
if ( Tcycles[c] <= Tdivs[d] ) print(paste(Tcycles[c],d-1,d-1,1,strengthCycle,0,0,sep=" ")) else noMore <- TRUE
if ( c+2 <= length(Tcycles) ) if ( Tcycles[c+2] > Tdivs[d] ) break
if ( Tcycles[c+1] < Tdivs[d] && noMore == FALSE ) print(paste(Tcycles[c+1],d-1,d-1,1,strengthCycle^(-1),0,0,sep=" "))
}
}
.1*25000
25000/20
require(ape)
?boot.phylo
X <- woodmouse
tree <- nj(X)
data(woodmouse)
X <- woodmouse
tree <- nj(X)
X <- dist.dna(woodmouse)
tree <- nj(X)
bt <- boot.phylo(tree, X, function(x) nj(function_IBS(x)))
str(X)
bt <- boot.phylo(tree, X, function(x) nj(dist.dna(x)))
X <- woodmouse
tree <- nj(dist.dna(X))
bt <- boot.phylo(tree, X, function(x) nj(dist.dna(x)))
plot(tree, type="unrooted", cex=.2, col="blue")
plot(tree, type="unrooted", cex=1, col="blue")
plot(tree, type="unrooted", cex=.7, col="blue")
?plot
plot(tree, type="unrooted", cex=.7, col="blue", no.margin=T, tip.color="blue")
plot(tree, type="unrooted", cex=.7, col="blue", no.margin=T, tip.color="blue", align.tip.label=T)
nodelabels(tree)
X <- woodmouse
tree <- nj(dist.dna(X))
bt <- boot.phylo(tree, X, function(x) nj(dist.dna(x)))
plot(tree, type="unrooted", cex=.7, col="blue", no.margin=T, tip.color="blue", align.tip.label=T)
nodelabels(bt)
?nodelabels
nodelabels(bt, frame="circle", bg="transparent")
X <- woodmouse
tree <- nj(dist.dna(X))
bt <- boot.phylo(tree, X, function(x) nj(dist.dna(x)))
plot(tree, type="unrooted", cex=.7, col="blue", no.margin=T, tip.color="blue", align.tip.label=T)
nodelabels(bt, frame="circle", bg="transparent")
nodelabels(bt, frame="circle", bg="white", cex=.5)
X <- woodmouse
tree <- nj(dist.dna(X))
bt <- boot.phylo(tree, X, function(x) nj(dist.dna(x)))
plot(tree, type="unrooted", cex=.7, col="blue", no.margin=T, tip.color="blue", align.tip.label=T)
nodelabels(bt, frame="circle", bg="white", cex=.5)
library(devtools)
dev_mode(on=T)
install_github("https://github.com/GuangchuangYu/ggtree")
install_github("GuangchuangYu/ggtree")
dev_mode(off=F)
dev_mode(on=F)
install.packages("installr")
require(installr)
updateR()
require(roxygen2)
sessionInfo()
require(roxygen2)
require(McSwan)
set_session
# demonstration kit
require(caret); require(MASS); require(abc); require(pls); require(ggplot2); require(reshape2); require(phyclust); require(RColorBrewer); require(McSwan); require(scales); require(sitools)
setwd("C:/Users/Windows/Desktop/McSwan_public/")
mut <- 2.5e-8
No <- 228516
ms <- "40 1 -t 0.0228516 -I 6 0 20 0 0 0 20 -n 1 1 -n 2 0.0999273573841657 -n 3 0.248109541563829 -n 4 0.111747098671428 -n 5 0.0635841691610216 -n 6 0.169016611528296 -en 0.000762528663200826 3 0.0162045546044916 -en 0.00207862906754888 5 0.0010458786255667 -en 0.0109084265434368 4 0.0542018939592851 -ej 0.00243965411612316 1 4 -ej 0.000109401529870994 2 1 -ej 0.00087193019307182 3 4 -ej 0.00218803059741987 5 4 -ej 0.000109401529870994 6 5 -es 0.000109401529870994 2 0.17 -ej 0.000110495545169704 2 1  -ej 0.000110495545169704 7 3 -m 2 3 0.0000456814 -m 6 5 0.0000017206"
# cf generate_ms_complexHumanModel_Excoffier2013.R
set_session(tempDir = "temp", javaPath = "C:/Program Files (x86)/Java/jre1.8.0_101/bin/javaw.exe", pythonPath="C:/Users/Windows/Anaconda2-4.2.0/python.exe")
reftb <- generate_priors(msDemography = ms, fold = F,
No = No,
windowSize = 2e4,
nSimul = 5) #1e4
tt <- Sys.time()
reftb <- coalesce(reftb, method="NULL", verbose=T)
print(Sys.time() - tt)
#install.packages("devtools")
library(devtools)
detach("package:McSwan")
remove.packages("McSwan")
install_github("sunyatin/McSwan/McSwan")
#install.packages("devtools")
library(devtools)
detach("package:McSwan")
remove.packages("McSwan")
install_github("sunyatin/McSwan/McSwan")
# demonstration kit
require(caret); require(MASS); require(abc); require(pls); require(ggplot2); require(reshape2); require(phyclust); require(RColorBrewer); require(McSwan); require(scales); require(sitools)
setwd("C:/Users/Windows/Desktop/McSwan_public/")
#detach("package:McSwan")
#remove.packages("McSwan")
#install.packages("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan_1.0.zip", repos=NULL)
#library("McSwan")
#
##
####
##
#
mut <- 2.5e-8
No <- 228516
ms <- "40 1 -t 0.0228516 -I 6 0 20 0 0 0 20 -n 1 1 -n 2 0.0999273573841657 -n 3 0.248109541563829 -n 4 0.111747098671428 -n 5 0.0635841691610216 -n 6 0.169016611528296 -en 0.000762528663200826 3 0.0162045546044916 -en 0.00207862906754888 5 0.0010458786255667 -en 0.0109084265434368 4 0.0542018939592851 -ej 0.00243965411612316 1 4 -ej 0.000109401529870994 2 1 -ej 0.00087193019307182 3 4 -ej 0.00218803059741987 5 4 -ej 0.000109401529870994 6 5 -es 0.000109401529870994 2 0.17 -ej 0.000110495545169704 2 1  -ej 0.000110495545169704 7 3 -m 2 3 0.0000456814 -m 6 5 0.0000017206"
# cf generate_ms_complexHumanModel_Excoffier2013.R
set_session(tempDir = "temp", javaPath = "C:/Program Files (x86)/Java/jre1.8.0_101/bin/javaw.exe", pythonPath="C:/Users/Windows/Anaconda2-4.2.0/python.exe")
reftb <- generate_priors(msDemography = ms, fold = F,
No = No,
windowSize = 2e4,
nSimul = 5) #1e4
tt <- Sys.time()
reftb <- coalesce(reftb, method="NULL", verbose=T)
print(Sys.time() - tt)
reftb
explain(reftb)
M <- matrix(sample(c(0,1,2), 100, replace=T), ncol=50)
str(M)
M <- matrix(sample(c(0,1,2), 1000, replace=T), ncol=50)
str(M)
require(McSwan)
?set_session
?set_session
?dir.create
ms
4685000-4682230
?generate_priors
require(McSwan)
?sliding_validation_trim
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
?convert_VCF
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
system("R CMD Rd2pdf McSwan_vignette")
system("R CMD Rd2pdf .")
system("R CMD Rd2pdf McSwan")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
system("R CMD Rd2pdf .")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
#
##
####
######
####
##
#
if (F) {
# generate dataset
mut <- 2.5e-8
No <- 4106
ms <- paste("80 1 -t",4*No*mut,
"-I 2 40 40",
"-en 0 2",58307/No,
"-en",70/(4*No),2,23738/No,
"-ej",2000/(4*No),"1 2",
"-en",2683/(4*No),2,7083/No,
"-en",2783/(4*No),2,7963/No)
set_session(tempDir = "C:/Users/Windows/Desktop/McSwan_public/temp", javaPath = "C:/Program Files (x86)/Java/jre1.8.0_111/bin/javaw.exe")
obs <- get_SFS("C:/Users/Windows/Desktop/McSwan_public/out/UNFOLDED_POLARIZED_2dSFS_CEU-LWK_20-20_chr2.txt", ms)
save(obs, file="UNFOLDED_POLARIZED_2dSFS_CEU-LWK_20-20_chr2")
}
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan")
require(roxygen2)
roxygenize(package.dir="McSwan", clean=TRUE)
# generate vignette / reference manual
## requires Mixtek to be installed
setwd("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan")
file.remove("C:/Users/Windows/Desktop/McSwan_public/McSwan/McSwan/..pdf")
system("R CMD Rd2pdf .")
?thin
?stat_density
str(OB)
